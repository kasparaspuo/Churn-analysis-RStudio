---
title: "Assignment 1"
author: "KP"
format: html
editor: visual
---

Loading our dataset "Churn"

```{r}
# Input data set Churn into Data Frame "churn" 
churn <- read.csv(file = "C:/Users/kaspa/OneDrive/Desktop/Semester 2/KDDV/Assignment 1/DatasetsLarose/churn.txt",
                 stringsAsFactors = TRUE)
# Checking the new Data Frame "churn"
head(churn)

```

Checking if our dataset "churn" has any missing values. If the result is "TRUE" then it has, if "FALSE" then our dataset has no missing values.

```{r}
# Question 33
any(is.na(churn))
```

Comparing area codes with states to see if there are any abnormalities

```{r}
# Question 34 
#Making frequency table to see if there are any abnormalities in the states
churn_subset <- churn[c(1,3)]
table(churn_subset)

```

Making a histogram as a graph to see if there are any outliers among the numbers of the Customer Service Calls.

```{r}
# Question 35
hist(churn$CustServ.Calls)
```

Identifying the range of customer service calls that should be considered outliers, using Z-score

```{r}
# Question 36 a: the Z-score method
# Calculating mean and standard deviation 
mean_custserv_calls <- mean(churn$CustServ.Calls)
sd_custserv_calls <- sd(churn$CustServ.Calls)
# Calculating z-scores
churn$CustServ.Calls.Z <- (churn$CustServ.Calls - mean_custserv_calls) / sd_custserv_calls

# Identifying outliers
outliers <- churn$CustServ.Calls[churn$CustServ.Calls.Z < -3 | churn$CustServ.Calls.Z > 3]
# Showing the range of outliers
range_outliers <- range(outliers)
# The customer service calls from 6 to 9 are outliers.
range_outliers
```

Identifying the range of customer service calls that should be considered outliers, using IQR method

```{r}
# Question 36 b: the IQR method
# Calculating Q1 and Q3
Q1 <- quantile(churn$CustServ.Calls, 0.25)
Q3 <- quantile(churn$CustServ.Calls, 0.75)
# Computing the IQR
IQR <- Q3 - Q1
# Determining the bounds for outliers
lower_bound <- Q1 - 1.5 * IQR
upper_bound <- Q3 + 1.5 * IQR

# Identifying outliers
lower_outliers <- churn[churn$CustServ.Calls < lower_bound,]
upper_outliers <- churn[churn$CustServ.Calls > upper_bound,]
# Combine the outliers
outliers <- rbind(lower_outliers, upper_outliers)

#Getting the range of outliers if there are any
outliers_range <- range(outliers$CustServ.Calls)
head(outliers_range)
```

Transforming the day minutes attribute using Z-score standardization

```{r}
# Question 37
# Calculating the mean and standard deviation of the Day.Mins column
mean_day_mins <- mean(churn$Day.Mins)
sd_day_mins <- sd(churn$Day.Mins)

# Standardizing the Day.Mins column.
churn$Day.Mins.Z <- (churn$Day.Mins - mean_day_mins) / sd_day_mins
# Standartization is a statistical technique to standardize the values of a numeric variable to a common scale with a mean of zero and a standard deviation of one. Standardization allows for the comparison of scores on different kinds of variables by transforming the distributions into a standard normal distribution (bell curve).
```

Working with skewness

```{r}
# Question 38 a) Calculating the skewness of day minutes
daymins_skew <- (3*(mean(churn$Day.Mins) -
                     median(churn$Day.Mins))) / sd(churn$Day.Mins)
daymins_skew #skewness day minutes


# Question 38 b) Calculating skewness z score of day minutes 
zscore.daymins_skew <-
  (3*(mean(churn$Day.Mins.Z) -
        median(churn$Day.Mins.Z))) /
  sd(churn$Day.Mins.Z)
zscore.daymins_skew # skewness  z score of day minutes 
#This result illustrates an important property of Z-score standardization: it does not change the shape of the distribution. Hence, the skewness remains unchanged.

```

```{r}
#Question 38 c)
#It is nearly perfectly symmetric. The value is very close to 0, indicating that the distribution of day minutes does not deviate much from symmetry.
```

```{r}
#Question 39
# Set up the plot area
par(mfrow = c(1,1))
# Create the histogram bars
qqnorm(churn$Day.Mins,
       datax = TRUE,
       col = "pink",
       main = "Normal Q-Q Plot of day mins") 
qqline(churn$Day.Mins,
       col = "navy",
       datax = TRUE)
#There is only a little bit of bending at the ends so it is quite normal
```

```{r}
#Question 40
par(mfrow = c(1,1))
qqnorm(churn$Intl.Mins,
       datax = TRUE,
       col = "lightgreen",
       main = "Normal Q-Q Plot of day mins") 
qqline(churn$Intl.Mins,
       col = "navy",
       datax = TRUE)
```

There is quite a big number of sample quantiles at the 0 that is indicating that it is not a normal distribution. there can be skewness. since some people do not make international calls it is reasonable.

```{r}
#Question 40 c)
churn$Intl.Used <- ifelse(churn$Intl.Mins > 0, 1, 0)
#This way we get a 0 if there are no calls made and a 1 if there is.
```

```{r}
subset_intcalls <- churn$Intl.Mins[churn$Intl.Used==1]
par(mfrow = c(1,1))
qqnorm(subset_intcalls,
       datax = TRUE,
       col = "lightgreen",
       main = "Normal Q-Q Plot of day mins") 
qqline(subset_intcalls,
       col = "navy",
       datax = TRUE)


# what the teacher showed with values:

international_caller <- rep(9999, lenght(churn$Intl.Mins))
for (i in 1:lenght(churn$Intl.Mins)) {
  if(churn $Intl.Mins[i] == 0)
    international_caller[i] <- 0
  else
    international_caller[i] <- 1
}
```

Now data is normalized, no 0 value, so normal distribution.

```{r}
#Question 41
z_nightmins <- (churn$Night.Mins - mean(churn$Night.Mins)) / sd(churn$Night.Mins)
hist(z_nightmins, col = "lightblue")
```
